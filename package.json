{
  "name": "bedrock_utils",
  "version": "0.0.1",
  "scripts": {
    "init": ".run/do.sh tmp_redmine init 192.168.33.11 192.168.2.100",
    "start": ".run/do.sh tmp_redmine run 192.168.33.11 192.168.2.100",
    "stop": ".run/do.sh tmp_redmine stop",
    "destroy": ".run/do.sh tmp_redmine destroy",
    "vagrant-reload": "pushd .run/tasks; vagrant reload --provision; popd",
    "vagrant-ssh": "pushd .run/tasks; vagrant ssh; popd",

    "start-public": ".run/do.sh tmp_redmine run 192.168.33.11 192.168.2.100",

    "go-install": "cd cmd; go get . ; cd ..",

    "go-build-win": "rm bin/bedrock_win; cd cmd; go build . ; mv cmd ../bin/bedrock_win; cd ..",
    "go-build-mac": "rm bin/bedrock_mac; cd cmd; go build . ; mv cmd ../bin/bedrock_mac; cd ..",
    "go-build-linux": "rm bin/bedrock_linux; cd cmd; go build . ; mv cmd ../bin/bedrock_linux; cd ..",

    "go-test-build-win": "bin/bedrock_win build test/func/build.toml",
    "go-test-build-mac": "bin/bedrock_mac build test/func/build.toml",
    "go-test-build-linux": "bin/bedrock_linux build test/func/build.toml",

    "go-example-build-win": "bin/bedrock_win build test/example/build.toml",
    "go-example-build-mac": "bin/bedrock_mac build test/example/build.toml",
    "go-example-build-linux": "bin/bedrock_linux build test/example/build.toml",

    "go-example-server-win": "bin/bedrock_win run test/example/server.toml",
    "go-example-server-mac": "bin/bedrock_mac run test/example/server.toml",
    "go-example-server-linux": "bin/bedrock_linux run test/example/server.toml",

    "go-example-test-build-times-mac-go": "SECONDS=0; npm run go-example-build-mac prod; echo \"[example-mac-go] $SECONDS secs\" >> log/times.log",
    "go-example-test-build-times-mac-node": "SECONDS=0; pushd test/example/node_build; npm run build prod; popd; echo \"[example-mac-node] $SECONDS secs\" >> log/times.log",
    "go-example-test-build-times-mac": "echo \"[example-mac] Start time test\"; for i in {1..30}; do npm run go-example-test-build-times-mac-go; npm run go-example-test-build-times-mac-node; done; echo \"[example-mac] Time test ended\""
  }
}
